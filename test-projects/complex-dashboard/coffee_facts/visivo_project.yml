name: coffee_facts

defaults:
  target_name: snowflake

targets:
  - name: snowflake
    database: raw
    account: {{ env_var('SNOWFLAKE_ACCOUNT') }}
    db_schema: coffee
    username: {{ env_var('CLI_UNIT_TESTING_SNOWFLAKE_USER') }}
    password: {{ env_var('CLI_UNIT_TESTING_SNOWFLAKE_PASSWORD') }}
    type: snowflake

models:
  - name: exports
    sql: | 
      with 
      base as (
      SELECt 
        country,
        total_export,
        (year || '-01-01')::date as year,
        kilograms,
        SUM(kilograms) OVER(PARTITION BY country) as total_kilograms,
        SUM(kilograms) OVER() as total_kg_all_countries
      FROM coffee_export
      )
      SELECT 
        *,
        CASE 
          WHEN DENSE_RANK() OVER(ORDER BY total_kilograms desc) <= 10 
            THEN country
          ELSE  'Everyone Else'
        END as top_countries,
        CASE 
          WHEN DENSE_RANK() OVER(ORDER BY total_kilograms desc) <= 15 
            THEN round((total_kilograms / total_kg_all_countries)*100, 2) || ' %'
          ELSE  ''
        END as top_countries_perc
      FROM base 
  - name: imports
    sql: | 
      with 
      base as (
      SELECt 
        country,
        total_import,
        (year || '-01-01')::date as year,
        kilograms,
        SUM(kilograms) OVER(PARTITION BY country) as total_kilograms,
        SUM(kilograms) OVER() as total_kg_all_countries
      FROM coffee_import
      )
      SELECT 
        *,
        CASE 
          WHEN DENSE_RANK() OVER(ORDER BY total_kilograms desc) <= 10 
            THEN country
          ELSE  'Everyone Else'
        END as top_countries,
        CASE 
          WHEN DENSE_RANK() OVER(ORDER BY total_kilograms desc) <= 15 
            THEN round((total_kilograms / total_kg_all_countries)*100, 2) || ' %'
          ELSE  ''
        END as top_countries_perc
      FROM base 

traces:
  - name: top_exporters
    model: ref(exports)
    cohort_on: query(top_countries)
    props:
      type: scatter
      x: query(year::varchar)
      y: query(SUM(abs(kilograms)))
      mode: line
      line:
        shape: spline
    order_by:
      - query(year)
    filters:
      - query(SUM(abs(kilograms)) > 0)
  
  - name: percent_exports
    model: ref(exports)
    columns:
      amount: sum(kilograms)
      labels: country
      top_countries_percent: max(top_countries_perc)
    props:
      type: pie
      values: column(amount)
      labels: column(labels)
      text: column(top_countries_percent)
      textinfo: text

  - name: percent_imports
    model: ref(imports)
    columns:
      amount: sum(kilograms)
      labels: country
      top_countries_percent: max(top_countries_perc)
    props:
      type: pie
      values: column(amount)
      labels: column(labels)
      text: column(top_countries_percent)
      textinfo: text

    
  - name: total_export_production
    model: ref(exports)
    cohort_on: query('Total')
    yaxis: 'y2'
    props:
      type: bar 
      marker:
        opacity: .20
        color: 'grey'
      x: query(year::varchar)
      y: query(sum(kilograms))
      text: query(round(sum(kilograms)/1000000000, 1) || 'B')
  - name: top_importers
    model: ref(imports)
    cohort_on: query(top_countries)
    props:
      type: scatter
      x: query(year::varchar)
      y: query(SUM(kilograms))
      mode: line
      line:
        shape: spline
    order_by:
      - query(year)
    filters:
      - query(SUM(kilograms) > 0)
  - name: total_import_production
    model: ref(imports)
    cohort_on: query('Total')
    yaxis: 'y2'
    props:
      type: bar 
      marker:
        opacity: .20
        color: 'grey'
      x: query(year::varchar)
      y: query(sum(kilograms))
      text: query(round(sum(kilograms)/1000000000, 1) || 'B')
    

charts:
  - name: import_percentages
    traces:
      - ref(percent_imports)
    layout:
      title: "Imports by Country"
  - name: export_percentages
    traces:
      - ref(percent_exports)
    layout:
      title: "Exports by Country"
  - name: importers
    traces:
      - ref(top_importers)
      - ref(total_import_production)
    layout:
      title: "Imports"
      xaxis:
        title: "Year"
      yaxis:
        title: "Kilograms"
      yaxis2:
        title: 'Total'
        tickfont:
          color: 'rgb(148, 103, 189)'
        overlaying: 'y'
        side: 'right'
      legend:
        x: 0.01
        y: 1.12
        orientation: h
        xanchor: left
        yanchor: top
  
  - name: exporters
    traces:
      - ref(top_exporters)
      - ref(total_export_production)
    layout:
      title: "Exports"
      xaxis:
        title: "Year"
      yaxis:
        title: "Kilograms"
      yaxis2:
        title: 'Total'
        tickfont:
          color: 'rgb(148, 103, 189)'
        overlaying: 'y'
        side: 'right'
      legend:
        x: 0.3
        y: 1.12
        orientation: h
        xanchor: left
        yanchor: top

dashboards:
  - name: Fun with Coffee Data
    rows:
      - height: medium
        items:
          - width: 1
            chart: ref(export_percentages)
          - width: 1
            chart: ref(import_percentages)
      - height: large
        items:
          - width: 1
            chart: ref(importers)
          - width: 1
            chart: ref(exporters)
  

